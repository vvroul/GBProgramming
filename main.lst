                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Tue Dec 24 15:45:25 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc129240
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _move_sprite
                             13 	.globl _set_sprite_tile
                             14 	.globl _set_sprite_data
                             15 	.globl _delay
                             16 	.globl _Knights
                             17 	.globl _main
                             18 ;--------------------------------------------------------
                             19 ; Externals used
                             20 ;--------------------------------------------------------
                             21 	.globl _IE_REG
                             22 	.globl _SVBK_REG
                             23 	.globl _OCPD_REG
                             24 	.globl _OCPS_REG
                             25 	.globl _BCPD_REG
                             26 	.globl _BCPS_REG
                             27 	.globl _RP_REG
                             28 	.globl _HDMA5_REG
                             29 	.globl _HDMA4_REG
                             30 	.globl _HDMA3_REG
                             31 	.globl _HDMA2_REG
                             32 	.globl _HDMA1_REG
                             33 	.globl _VBK_REG
                             34 	.globl _KEY1_REG
                             35 	.globl _WX_REG
                             36 	.globl _WY_REG
                             37 	.globl _OBP1_REG
                             38 	.globl _OBP0_REG
                             39 	.globl _BGP_REG
                             40 	.globl _DMA_REG
                             41 	.globl _LYC_REG
                             42 	.globl _LY_REG
                             43 	.globl _SCX_REG
                             44 	.globl _SCY_REG
                             45 	.globl _STAT_REG
                             46 	.globl _LCDC_REG
                             47 	.globl _NR52_REG
                             48 	.globl _NR51_REG
                             49 	.globl _NR50_REG
                             50 	.globl _NR44_REG
                             51 	.globl _NR43_REG
                             52 	.globl _NR42_REG
                             53 	.globl _NR41_REG
                             54 	.globl _NR34_REG
                             55 	.globl _NR33_REG
                             56 	.globl _NR32_REG
                             57 	.globl _NR31_REG
                             58 	.globl _NR30_REG
                             59 	.globl _NR24_REG
                             60 	.globl _NR23_REG
                             61 	.globl _NR22_REG
                             62 	.globl _NR21_REG
                             63 	.globl _NR14_REG
                             64 	.globl _NR13_REG
                             65 	.globl _NR12_REG
                             66 	.globl _NR11_REG
                             67 	.globl _NR10_REG
                             68 	.globl _IF_REG
                             69 	.globl _TAC_REG
                             70 	.globl _TMA_REG
                             71 	.globl _TIMA_REG
                             72 	.globl _DIV_REG
                             73 	.globl _SC_REG
                             74 	.globl _SB_REG
                             75 	.globl _P1_REG
                             76 	.globl __io_out
                             77 	.globl __io_in
                             78 	.globl __io_status
                             79 	.globl _sys_time
                             80 	.globl __cpu
                             81 ;--------------------------------------------------------
                             82 ; special function registers
                             83 ;--------------------------------------------------------
                             84 ;--------------------------------------------------------
                             85 ; special function bits 
                             86 ;--------------------------------------------------------
                             87 ;--------------------------------------------------------
                             88 ; internal ram data
                             89 ;--------------------------------------------------------
                             90 	.area _DATA
   0000                      91 _Knights::
   0000                      92 	.ds 32
                             93 ;--------------------------------------------------------
                             94 ; overlayable items in internal ram 
                             95 ;--------------------------------------------------------
                             96 	.area _OVERLAY
                             97 ;--------------------------------------------------------
                             98 ; indirectly addressable internal ram data
                             99 ;--------------------------------------------------------
                            100 	.area _ISEG
                            101 ;--------------------------------------------------------
                            102 ; bit data
                            103 ;--------------------------------------------------------
                            104 	.area _BSEG
                            105 ;--------------------------------------------------------
                            106 ; external ram data
                            107 ;--------------------------------------------------------
                            108 	.area _XSEG
                            109 ;--------------------------------------------------------
                            110 ; global & static initialisations
                            111 ;--------------------------------------------------------
                            112 	.area _GSINIT
                            113 	.area _GSFINAL
                            114 	.area _GSINIT
                            115 ;	main.c 22
                            116 ; genAssign (pointer)
   0000 11 00 00            117 	ld	de,#_Knights + 0
   0003 3E 7E               118 	ld	a,#0x7E
   0005 12                  119 	ld	(de),a
                            120 ; genPlus
                            121 ; genPlusIncr
   0006 11 01 00            122 	ld	de,#_Knights + 0 + 1
                            123 ; genAssign (pointer)
   0009 3E 7E               124 	ld	a,#0x7E
   000B 12                  125 	ld	(de),a
                            126 ; genPlus
                            127 ; genPlusIncr
   000C 11 02 00            128 	ld	de,#_Knights + 0 + 2
                            129 ; genAssign (pointer)
   000F 3E 7F               130 	ld	a,#0x7F
   0011 12                  131 	ld	(de),a
                            132 ; genPlus
                            133 ; genPlusIncr
   0012 11 03 00            134 	ld	de,#_Knights + 0 + 3
                            135 ; genAssign (pointer)
   0015 3E 43               136 	ld	a,#0x43
   0017 12                  137 	ld	(de),a
                            138 ; genPlus
                            139 ; genPlusIncr
   0018 11 04 00            140 	ld	de,#_Knights + 0 + 4
                            141 ; genAssign (pointer)
   001B 3E FF               142 	ld	a,#0xFF
   001D 12                  143 	ld	(de),a
                            144 ; genPlus
                            145 ; genPlusIncr
   001E 11 05 00            146 	ld	de,#_Knights + 0 + 5
                            147 ; genAssign (pointer)
   0021 3E A5               148 	ld	a,#0xA5
   0023 12                  149 	ld	(de),a
                            150 ; genPlus
                            151 ; genPlusIncr
   0024 11 06 00            152 	ld	de,#_Knights + 0 + 6
                            153 ; genAssign (pointer)
   0027 3E FF               154 	ld	a,#0xFF
   0029 12                  155 	ld	(de),a
                            156 ; genPlus
                            157 ; genPlusIncr
   002A 11 07 00            158 	ld	de,#_Knights + 0 + 7
                            159 ; genAssign (pointer)
   002D 3E 81               160 	ld	a,#0x81
   002F 12                  161 	ld	(de),a
                            162 ; genPlus
                            163 ; genPlusIncr
   0030 11 08 00            164 	ld	de,#_Knights + 0 + 8
                            165 ; genAssign (pointer)
   0033 3E FF               166 	ld	a,#0xFF
   0035 12                  167 	ld	(de),a
                            168 ; genPlus
                            169 ; genPlusIncr
   0036 11 09 00            170 	ld	de,#_Knights + 0 + 9
                            171 ; genAssign (pointer)
   0039 3E C3               172 	ld	a,#0xC3
   003B 12                  173 	ld	(de),a
                            174 ; genPlus
                            175 ; genPlusIncr
   003C 11 0A 00            176 	ld	de,#_Knights + 0 + 10
                            177 ; genAssign (pointer)
   003F 3E FF               178 	ld	a,#0xFF
   0041 12                  179 	ld	(de),a
                            180 ; genPlus
                            181 ; genPlusIncr
   0042 11 0B 00            182 	ld	de,#_Knights + 0 + 11
                            183 ; genAssign (pointer)
   0045 3E 81               184 	ld	a,#0x81
   0047 12                  185 	ld	(de),a
                            186 ; genPlus
                            187 ; genPlusIncr
   0048 11 0C 00            188 	ld	de,#_Knights + 0 + 12
                            189 ; genAssign (pointer)
   004B 3E FF               190 	ld	a,#0xFF
   004D 12                  191 	ld	(de),a
                            192 ; genPlus
                            193 ; genPlusIncr
   004E 11 0D 00            194 	ld	de,#_Knights + 0 + 13
                            195 ; genAssign (pointer)
   0051 3E FF               196 	ld	a,#0xFF
   0053 12                  197 	ld	(de),a
                            198 ; genPlus
                            199 ; genPlusIncr
   0054 11 0E 00            200 	ld	de,#_Knights + 0 + 14
                            201 ; genAssign (pointer)
   0057 3E FF               202 	ld	a,#0xFF
   0059 12                  203 	ld	(de),a
                            204 ; genPlus
                            205 ; genPlusIncr
   005A 11 0F 00            206 	ld	de,#_Knights + 0 + 15
                            207 ; genAssign (pointer)
   005D 3E FF               208 	ld	a,#0xFF
   005F 12                  209 	ld	(de),a
                            210 ; genPlus
                            211 ; genPlusIncr
   0060 11 10 00            212 	ld	de,#_Knights + 0 + 16
                            213 ; genAssign (pointer)
   0063 3E 7E               214 	ld	a,#0x7E
   0065 12                  215 	ld	(de),a
                            216 ; genPlus
                            217 ; genPlusIncr
   0066 11 11 00            218 	ld	de,#_Knights + 0 + 17
                            219 ; genAssign (pointer)
   0069 3E 7E               220 	ld	a,#0x7E
   006B 12                  221 	ld	(de),a
                            222 ; genPlus
                            223 ; genPlusIncr
   006C 11 12 00            224 	ld	de,#_Knights + 0 + 18
                            225 ; genAssign (pointer)
   006F 3E 7F               226 	ld	a,#0x7F
   0071 12                  227 	ld	(de),a
                            228 ; genPlus
                            229 ; genPlusIncr
   0072 11 13 00            230 	ld	de,#_Knights + 0 + 19
                            231 ; genAssign (pointer)
   0075 3E 5B               232 	ld	a,#0x5B
   0077 12                  233 	ld	(de),a
                            234 ; genPlus
                            235 ; genPlusIncr
   0078 11 14 00            236 	ld	de,#_Knights + 0 + 20
                            237 ; genAssign (pointer)
   007B 3E FF               238 	ld	a,#0xFF
   007D 12                  239 	ld	(de),a
                            240 ; genPlus
                            241 ; genPlusIncr
   007E 11 15 00            242 	ld	de,#_Knights + 0 + 21
                            243 ; genAssign (pointer)
   0081 3E BD               244 	ld	a,#0xBD
   0083 12                  245 	ld	(de),a
                            246 ; genPlus
                            247 ; genPlusIncr
   0084 11 16 00            248 	ld	de,#_Knights + 0 + 22
                            249 ; genAssign (pointer)
   0087 3E FF               250 	ld	a,#0xFF
   0089 12                  251 	ld	(de),a
                            252 ; genPlus
                            253 ; genPlusIncr
   008A 11 17 00            254 	ld	de,#_Knights + 0 + 23
                            255 ; genAssign (pointer)
   008D 3E 99               256 	ld	a,#0x99
   008F 12                  257 	ld	(de),a
                            258 ; genPlus
                            259 ; genPlusIncr
   0090 11 18 00            260 	ld	de,#_Knights + 0 + 24
                            261 ; genAssign (pointer)
   0093 3E FF               262 	ld	a,#0xFF
   0095 12                  263 	ld	(de),a
                            264 ; genPlus
                            265 ; genPlusIncr
   0096 11 19 00            266 	ld	de,#_Knights + 0 + 25
                            267 ; genAssign (pointer)
   0099 3E DB               268 	ld	a,#0xDB
   009B 12                  269 	ld	(de),a
                            270 ; genPlus
                            271 ; genPlusIncr
   009C 11 1A 00            272 	ld	de,#_Knights + 0 + 26
                            273 ; genAssign (pointer)
   009F 3E C3               274 	ld	a,#0xC3
   00A1 12                  275 	ld	(de),a
                            276 ; genPlus
                            277 ; genPlusIncr
   00A2 11 1B 00            278 	ld	de,#_Knights + 0 + 27
                            279 ; genAssign (pointer)
   00A5 3E FF               280 	ld	a,#0xFF
   00A7 12                  281 	ld	(de),a
                            282 ; genPlus
                            283 ; genPlusIncr
   00A8 11 1C 00            284 	ld	de,#_Knights + 0 + 28
                            285 ; genAssign (pointer)
   00AB 3E FF               286 	ld	a,#0xFF
   00AD 12                  287 	ld	(de),a
                            288 ; genPlus
                            289 ; genPlusIncr
   00AE 11 1D 00            290 	ld	de,#_Knights + 0 + 29
                            291 ; genAssign (pointer)
   00B1 3E FF               292 	ld	a,#0xFF
   00B3 12                  293 	ld	(de),a
                            294 ; genPlus
                            295 ; genPlusIncr
   00B4 11 1E 00            296 	ld	de,#_Knights + 0 + 30
                            297 ; genAssign (pointer)
   00B7 3E FF               298 	ld	a,#0xFF
   00B9 12                  299 	ld	(de),a
                            300 ; genPlus
                            301 ; genPlusIncr
   00BA 11 1F 00            302 	ld	de,#_Knights + 0 + 31
                            303 ; genAssign (pointer)
   00BD 3E FF               304 	ld	a,#0xFF
   00BF 12                  305 	ld	(de),a
                            306 ;--------------------------------------------------------
                            307 ; Home
                            308 ;--------------------------------------------------------
                            309 	.area _HOME
                            310 	.area _CODE
                            311 ;--------------------------------------------------------
                            312 ; code
                            313 ;--------------------------------------------------------
                            314 	.area _CODE
                            315 ;	main.c 5
                            316 ; genLabel
                            317 ; genFunction
                            318 ;	---------------------------------
                            319 ; Function main
                            320 ; ---------------------------------
   0000                     321 ___main_start:
   0000                     322 _main:
   0000 C5                  323 	push	bc
                            324 	
                            325 ;	main.c 7
                            326 ; genAssign
   0001 0E 00               327 	ld	c,#0x00
                            328 ;	main.c 8
                            329 ; genIpush
   0003 21 00 00            330 	ld	hl,#_Knights + 0
   0006 E5                  331 	push	hl
                            332 ; genIpush
   0007 3E 02               333 	ld	a,#0x02
   0009 F5                  334 	push	af
   000A 33                  335 	inc	sp
                            336 ; genIpush
   000B 3E 00               337 	ld	a,#0x00
   000D F5                  338 	push	af
   000E 33                  339 	inc	sp
                            340 ; genCall
   000F CD 00 00            341 	call	_set_sprite_data
   0012 E8 04               342 	lda	sp,4(sp)
                            343 ;	main.c 9
                            344 ; genIpush
   0014 3E 00               345 	ld	a,#0x00
   0016 F5                  346 	push	af
   0017 33                  347 	inc	sp
                            348 ; genIpush
   0018 3E 00               349 	ld	a,#0x00
   001A F5                  350 	push	af
   001B 33                  351 	inc	sp
                            352 ; genCall
   001C CD 00 00            353 	call	_set_sprite_tile
   001F E8 02               354 	lda	sp,2(sp)
                            355 ;	main.c 10
                            356 ; genIpush
   0021 3E 4E               357 	ld	a,#0x4E
   0023 F5                  358 	push	af
   0024 33                  359 	inc	sp
                            360 ; genIpush
   0025 3E 58               361 	ld	a,#0x58
   0027 F5                  362 	push	af
   0028 33                  363 	inc	sp
                            364 ; genIpush
   0029 3E 00               365 	ld	a,#0x00
   002B F5                  366 	push	af
   002C 33                  367 	inc	sp
                            368 ; genCall
   002D CD 00 00            369 	call	_move_sprite
   0030 E8 03               370 	lda	sp,3(sp)
                            371 ;	main.c 11
                            372 ; genOr
                            373 ; AOP_SFR for _LCDC_REG
                            374 ; Type res[4] = l[4]&r[1]
                            375 ; Size res[1] = l[1]&r[1]
   0032 F0 00               376 	ldh	a,(_LCDC_REG+0) ; x
   0034 F6 02               377 	or	a,#0x02
   0036 E0 00               378 	ldh	(_LCDC_REG+0),a
                            379 ;	main.c 13
                            380 ; genLabel
   0038                     381 00105$:
                            382 ;	main.c 15
                            383 ; genCmpEq
   0038 79                  384 	ld	a,c
   0039 B7                  385 	or	a,a
   003A C2 3F 00            386 	jp	nz,00111$
   003D 18 03               387 	jr	00112$
   003F                     388 00111$:
   003F C3 47 00            389 	jp	00102$
   0042                     390 00112$:
                            391 ; genAssign
   0042 0E 01               392 	ld	c,#0x01
                            393 ; genGoto
   0044 C3 49 00            394 	jp	00103$
                            395 ; genLabel
   0047                     396 00102$:
                            397 ;	main.c 16
                            398 ; genAssign
   0047 0E 00               399 	ld	c,#0x00
                            400 ; genLabel
   0049                     401 00103$:
                            402 ;	main.c 17
                            403 ; genIpush
   0049 79                  404 	ld	a,c
   004A F5                  405 	push	af
   004B 33                  406 	inc	sp
                            407 ; genIpush
   004C 3E 00               408 	ld	a,#0x00
   004E F5                  409 	push	af
   004F 33                  410 	inc	sp
                            411 ; genCall
   0050 CD 00 00            412 	call	_set_sprite_tile
   0053 E8 02               413 	lda	sp,2(sp)
                            414 ;	main.c 18
                            415 ; genIpush
   0055 21 E8 03            416 	ld	hl,#0x03E8
   0058 E5                  417 	push	hl
                            418 ; genCall
   0059 CD 00 00            419 	call	_delay
   005C E8 02               420 	lda	sp,2(sp)
                            421 ; genGoto
   005E C3 38 00            422 	jp	00105$
                            423 ; genLabel
   0061                     424 00107$:
                            425 ; genEndFunction
                            426 	
   0061 C1                  427 	pop	bc
   0062 C9                  428 	ret
   0063                     429 ___main_end:
                            430 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
  1 _Knights                           0000 GR
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        0063 R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
    _delay                             **** GX
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
    _sys_time                          **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   63   flags 0
   1 _DATA                              size   20   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   C0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
